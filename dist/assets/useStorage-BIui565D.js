import{r as e}from"./vendor-BHX-4vy9.js";import{r as t,s as a,b as r,g as n,c as o,d as s,l,e as i}from"./index-DSv-p_Z0.js";const c=[];for(let p=0;p<256;++p)c.push((p+256).toString(16).slice(1));let u;const d=new Uint8Array(16);const f={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};function h(e,t,a){var r;if(f.randomUUID&&!e)return f.randomUUID();const n=(e=e||{}).random??(null==(r=e.rng)?void 0:r.call(e))??function(){if(!u){if("undefined"==typeof crypto||!crypto.getRandomValues)throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");u=crypto.getRandomValues.bind(crypto)}return u(d)}();if(n.length<16)throw new Error("Random bytes length must be >= 16");return n[6]=15&n[6]|64,n[8]=63&n[8]|128,function(e,t=0){return(c[e[t+0]]+c[e[t+1]]+c[e[t+2]]+c[e[t+3]]+"-"+c[e[t+4]]+c[e[t+5]]+"-"+c[e[t+6]]+c[e[t+7]]+"-"+c[e[t+8]]+c[e[t+9]]+"-"+c[e[t+10]]+c[e[t+11]]+c[e[t+12]]+c[e[t+13]]+c[e[t+14]]+c[e[t+15]]).toLowerCase()}(n)}const m=()=>{const[c,u]=e.useState(0),[d,f]=e.useState(null),[m,p]=e.useState(null),[g,w]=e.useState(!1),[y,b]=e.useState({}),S=e.useCallback((()=>{f(null)}),[]);e.useEffect((()=>()=>{Object.values(y).forEach((e=>{e&&"function"==typeof e.cancel&&e.cancel()}))}),[y]);const E=e.useCallback((e=>{const t=e.split(".").pop();return`${h()}.${t}`}),[]),P=e.useCallback((async(e,s="uploads",l={},i=null)=>{if(!e){const e=new Error("No file provided");throw f(e.message),e}if(e.size>5242880){const t=new Error(`File size exceeds 5MB limit. File: ${e.name}, Size: ${(e.size/1048576).toFixed(2)}MB`);throw f(t.message),t}u(0),f(null),p(null),w(!0);try{if(s.includes("undefined")||s.includes("null"))throw new Error("Invalid storage path. Authentication may be required.");const c=E(e.name),d=`${s}/${c}`,m=t(a,d),g={contentType:e.type,customMetadata:{originalName:e.name,uploadedAt:(new Date).toISOString(),size:e.size.toString(),...l.customMetadata},...l},y=r(m,e,g),S=h();return b((e=>({...e,[S]:y}))),new Promise(((t,a)=>{y.on("state_changed",(e=>{const t=e.bytesTransferred/e.totalBytes*100;u(t),i&&i(t,e)}),(e=>{let t=e.message;"storage/unauthorized"===e.code?t="You need to be logged in to upload files. Please sign in and try again.":"storage/quota-exceeded"===e.code?t="Storage quota exceeded. Please contact support.":"storage/retry-limit-exceeded"===e.code?t="Network error. Please check your internet connection and try again.":"storage/invalid-format"===e.code?t="Invalid file format. Please use JPG, PNG, GIF, or WebP files.":"storage/canceled"===e.code&&(t="Upload was cancelled."),f(t),w(!1),b((e=>{const t={...e};return delete t[S],t})),a(new Error(t))}),(async()=>{try{const a=await n(y.snapshot.ref);p(a);const r=await o(y.snapshot.ref),s={url:a,path:d,filename:c,ref:y.snapshot.ref,metadata:r,originalName:e.name,contentType:e.type,size:e.size,uploadedAt:(new Date).toISOString()};w(!1),b((e=>{const t={...e};return delete t[S],t})),t(s)}catch(r){f(r.message),w(!1),b((e=>{const t={...e};return delete t[S],t})),a(r)}}))}))}catch(c){throw f(c.message),w(!1),c}}),[E]),v=e.useCallback((async(e,t="uploads",a={},r=null,n=null,o=4)=>{if(!e||!e.length){const e=new Error("No files provided");throw f(e.message),e}const s=new Map;new Array(e.length);let l=0;const i=()=>{if(!r)return;let t=0;s.forEach((e=>{t+=e}));const a=(100*l+t)/e.length;r(Math.min(a,99.9))};try{const r=[...e],c=new Set,u=[];for(;r.length>0||c.size>0;){for(;r.length>0&&c.size<o;){const o=r.shift(),d=e.indexOf(o);s.set(d,0);const f={...a,customMetadata:{...a.customMetadata,fileIndex:d.toString(),totalFiles:e.length.toString(),fileName:o.name}},h=(e,t)=>{s.set(d,e),n&&n(e,d,o,t),i()},m=(async()=>{try{const e=await P(o,t,f,h);return l++,s.set(d,100),i(),{index:d,result:e,status:"success"}}catch(e){return{index:d,error:e,status:"error",file:o}}finally{c.delete(m)}})();c.add(m),u.push(m)}(c.size>=o||0===r.length)&&await Promise.race(c)}const d=await Promise.all(u),h=d.filter((e=>"error"===e.status));if(h.length>0){const t=`${h.length} of ${e.length} uploads failed`;f(t),h[0].error}return d.filter((e=>"success"===e.status)).sort(((e,t)=>e.index-t.index)).map((e=>e.result))}catch(c){throw f(c.message),c}}),[P]),U=e.useCallback((async e=>{f(null);try{if(!e)throw new Error("No file path provided");const r=t(a,e);return await s(r),!0}catch(r){throw f(r.message),r}}),[]),x=e.useCallback((async e=>{if(f(null),!e||!e.length)return[];try{return await Promise.all(e.map((async e=>{try{return await U(e),!0}catch(t){return!1}})))}catch(t){throw f(t.message),t}}),[U]),z=e.useCallback((async e=>{f(null);try{if(!e)throw new Error("No file path provided");const r=t(a,e);return await n(r)}catch(r){throw f(r.message),r}}),[]),F=e.useCallback((async e=>{f(null);try{if(!e)throw new Error("No path provided");const r=t(a,e),s=(await l(r)).items.map((async e=>{try{const t=await n(e),a=await o(e);return{name:e.name,fullPath:e.fullPath,url:t,metadata:a,ref:e}}catch(t){return{name:e.name,fullPath:e.fullPath,error:t.message,ref:e}}}));return await Promise.all(s)}catch(r){throw f(r.message),r}}),[]),N=e.useCallback((async(e,r)=>{f(null);try{if(!e)throw new Error("No file path provided");if(!r)throw new Error("No metadata provided");const n=t(a,e);return await i(n,r)}catch(n){throw f(n.message),n}}),[]);return{progress:c,error:d,url:m,isUploading:g,clearError:S,uploadFile:P,uploadMultipleFiles:v,deleteFile:U,deleteMultipleFiles:x,getFileUrl:z,listFiles:F,updateFileMetadata:N}};export{m as u};
